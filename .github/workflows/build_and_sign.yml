name: Build and Sign Container Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      image-tag:
        description: 'Image tag to build and sign'
        required: false
        default: 'latest'

jobs:
  build-and-sign:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write  # For GitHub Container Registry
      id-token: write  # For AWS credential provider
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    # Login to ECR by default
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with: 
        mask-password: true
      
    - name: Set image name
      id: set-image-name
      run: |
        # Default to ECR
        REGISTRY="${{ steps.login-ecr.outputs.registry }}"
        # Use the specified ECR repo or default to repository name
        REPOSITORY="${{ secrets.ECR_REPOSITORY || github.repository }}"
        
        IMAGE_TAG="${{ github.event.inputs.image-tag || github.sha }}"
        FULL_IMAGE_NAME="${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}"
        
        echo "FULL_IMAGE_NAME=${FULL_IMAGE_NAME}" >> $GITHUB_OUTPUT
        echo "Image will be: ${FULL_IMAGE_NAME}"

    - name: Build and push Docker image
      working-directory: ./app
      run: |
        docker build -t ${{ steps.set-image-name.outputs.FULL_IMAGE_NAME }} -f Dockerfile .
        docker push ${{ steps.set-image-name.outputs.FULL_IMAGE_NAME }}

    - name: Install Notation CLI and AWS Signer Plugin
      run: |
        # Enable verbose output
        set -x
        
        echo "===== System Information ====="
        uname -a
        cat /etc/os-release || echo "OS release info not available"
        
        echo "===== Installing AWS Signer Notation CLI with detailed logging ====="
        # Download the package
        curl -Lo aws-signer-notation-cli.deb https://d2hvyiie56hcat.cloudfront.net/linux/amd64/installer/deb/latest/aws-signer-notation-cli_amd64.deb
        
        # Get package info
        dpkg -I aws-signer-notation-cli.deb || echo "Could not read package info"
        
        # Check for dependencies
        echo "===== Checking for dependencies ====="
        apt-cache policy libc6 || echo "Could not check libc6"
        
        # Try to install with detailed output
        echo "===== Installing with detailed output ====="
        sudo DEBIAN_FRONTEND=noninteractive dpkg -i aws-signer-notation-cli.deb || true
        
        # If dpkg fails, try to fix with apt-get
        echo "===== Attempting to fix dependencies ====="
        sudo apt-get update
        sudo apt-get install -f -y
        
        # Try again with the package installation
        echo "===== Retrying package installation ====="
        sudo DEBIAN_FRONTEND=noninteractive dpkg -i aws-signer-notation-cli.deb || true
        
        echo "===== Alternative approach: Manual installation ====="
        # Try manual installation as a fallback
        wget https://github.com/notaryproject/notation/releases/download/v1.0.0/notation_1.0.0_linux_amd64.tar.gz
        wget https://github.com/notaryproject/notation-aws-signer/releases/download/v1.0.2/notation-aws-signer_1.0.2_linux_amd64.tar.gz
        
        mkdir -p notation
        tar -xzf notation_1.0.0_linux_amd64.tar.gz -C notation
        mkdir -p notation-aws-signer
        tar -xzf notation-aws-signer_1.0.2_linux_amd64.tar.gz -C notation-aws-signer
        
        sudo install notation/notation /usr/local/bin/notation
        sudo install notation-aws-signer/notation-aws-signer /usr/local/bin/notation-aws-signer
        
        # Create necessary directories and symlinks
        mkdir -p ~/.config/notation/plugins/aws-signer
        ln -sf /usr/local/bin/notation-aws-signer ~/.config/notation/plugins/aws-signer/notation-aws-signer
        chmod +x ~/.config/notation/plugins/aws-signer/notation-aws-signer
    
        # Install the plugin
        notation plugin install aws-signer || true
        
        echo "===== Verification ====="
        # Check installations
        which notation || echo "Notation not found"
        which notation-aws-signer || echo "AWS Signer plugin not found"
        notation version || echo "Notation version failed"
        notation plugin list || echo "Plugin list failed"
    
        # Show installed files from package
        dpkg -L aws-signer-notation-cli || echo "Package files not found"
        
        # Check symlinks
        ls -la ~/.config/notation/plugins/aws-signer/ || echo "Plugin directory missing"
        
        echo "===== Installation complete ====="

    - name: Sign image with Notation using AWS Signer
      env:
        AWS_SIGNING_PROFILE_NAME: ${{ secrets.AWS_SIGNING_PROFILE_NAME }}
      run: |
        # Sign the image
        notation sign --plugin aws-signer --id $AWS_SIGNING_PROFILE_NAME ${{ steps.set-image-name.outputs.FULL_IMAGE_NAME }}
        
        # Verify the signature
        notation verify ${{ steps.set-image-name.outputs.FULL_IMAGE_NAME }}
